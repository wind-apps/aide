// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "items",
    columns: [
      { name: "title", type: "string" },
      { name: "content", type: "json" },
      { name: "textContent", type: "text" },
      { name: "tags", type: "multiple" },
    ],
    revLinks: [{ column: "item", table: "items_tags" }],
  },
  {
    name: "tags",
    columns: [{ name: "name", type: "string", unique: true }],
    revLinks: [{ column: "tag", table: "items_tags" }],
  },
  {
    name: "items_tags",
    columns: [
      { name: "tag", type: "link", link: { table: "tags" } },
      { name: "item", type: "link", link: { table: "items" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Items = InferredTypes["items"];
export type ItemsRecord = Items & XataRecord;

export type Tags = InferredTypes["tags"];
export type TagsRecord = Tags & XataRecord;

export type ItemsTags = InferredTypes["items_tags"];
export type ItemsTagsRecord = ItemsTags & XataRecord;

export type DatabaseSchema = {
  items: ItemsRecord;
  tags: TagsRecord;
  items_tags: ItemsTagsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://Demos-t13ff3.eu-west-1.xata.sh/db/aide-app",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
